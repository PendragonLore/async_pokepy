build: off

environment:
  matrix:
    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "64"

install:
  - ps: if (-not(Test-Path($env:PYTHON))) { & _appveyor\install.ps1 }

  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - "%CMD_IN_ENV% SET PYTHONPATH=%CD%;%PYTHONPATH%"

  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  - "python -m pip install -U pip setuptools wheel"
  - "%CMD_IN_ENV% pip install -U -r devreq.txt"

test_script:
  - "%CMD_IN_ENV% pytest -vs --cov=async_pokepy --cov-report term-missing:skip-covered"
  - "%CMD_IN_ENV% flake8 ."
  - "%CMD_IN_ENV% pylint async_pokepy"
  - "%CMD_IN_ENV% isort . --check-only --recursive"

after_test:
  - "%CMD_IN_ENV% python setup.py sdist bdist_egg bdist_wheel"

artifacts:
  - path: dist\*